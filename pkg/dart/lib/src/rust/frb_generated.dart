// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.40.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/simple.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'frb_generated.io.dart' if (dart.library.html) 'frb_generated.web.dart';
import 'lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'third_party/gluesql_core/ast.dart';
import 'third_party/gluesql_core/ast_builder/expr/function.dart';
import 'third_party/gluesql_core/data/schema.dart';
import 'third_party/gluesql_core/data/value.dart';
import 'third_party/gluesql_core/data/value/literal.dart';
import 'third_party/gluesql_core/translate.dart';
import 'third_party/gluesql_memory_storage.dart';

/// Main entrypoint of the Rust API
class RustLib extends BaseEntrypoint<RustLibApi, RustLibApiImpl, RustLibWire> {
  @internal
  static final instance = RustLib._();

  RustLib._();

  /// Initialize flutter_rust_bridge
  static Future<void> init({
    RustLibApi? api,
    BaseHandler? handler,
    ExternalLibrary? externalLibrary,
  }) async {
    await instance.initImpl(
      api: api,
      handler: handler,
      externalLibrary: externalLibrary,
    );
  }

  /// Dispose flutter_rust_bridge
  ///
  /// The call to this function is optional, since flutter_rust_bridge (and everything else)
  /// is automatically disposed when the app stops.
  static void dispose() => instance.disposeImpl();

  @override
  ApiImplConstructor<RustLibApiImpl, RustLibWire> get apiImplConstructor =>
      RustLibApiImpl.new;

  @override
  WireConstructor<RustLibWire> get wireConstructor =>
      RustLibWire.fromExternalLibrary;

  @override
  Future<void> executeRustInitializers() async {
    await api.crateApiSimpleInitApp();
  }

  @override
  ExternalLibraryLoaderConfig get defaultExternalLibraryLoaderConfig =>
      kDefaultExternalLibraryLoaderConfig;

  @override
  String get codegenVersion => '2.0.0-dev.40';

  @override
  int get rustContentHash => -2079804261;

  static const kDefaultExternalLibraryLoaderConfig =
      ExternalLibraryLoaderConfig(
    stem: 'rust_lib_dart',
    ioDirectory: 'rust/target/release/',
    webPrefix: 'pkg/',
  );
}

abstract class RustLibApi extends BaseApi {
  Future<List<Payload>> crateApiSimpleExecute({required String sql});

  Future<void> crateApiSimpleInitApp();

  String gluesqlCoreAstAssignmentAutoAccessorGetId({required Assignment that});

  Expr gluesqlCoreAstAssignmentAutoAccessorGetValue({required Assignment that});

  void gluesqlCoreAstAssignmentAutoAccessorSetId(
      {required Assignment that, required String id});

  void gluesqlCoreAstAssignmentAutoAccessorSetValue(
      {required Assignment that, required Expr value});

  Future<String> gluesqlCoreAstAssignmentToSql({required Assignment that});

  Future<String> gluesqlCoreAstStatementToSql({required Statement that});

  Future<String> gluesqlCoreAstForeignKeyToSql({required ForeignKey that});

  Future<ExprNode> gluesqlCoreAstBuilderExprFunctionRand({ExprNode? expr});

  DateTime gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetCreated(
      {required SchemaIndex that});

  Expr gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetExpr(
      {required SchemaIndex that});

  String gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetName(
      {required SchemaIndex that});

  SchemaIndexOrd gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetOrder(
      {required SchemaIndex that});

  void gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetCreated(
      {required SchemaIndex that, required DateTime created});

  void gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetExpr(
      {required SchemaIndex that, required Expr expr});

  void gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetName(
      {required SchemaIndex that, required String name});

  void gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetOrder(
      {required SchemaIndex that, required SchemaIndexOrd order});

  Future<Schema> gluesqlCoreDataSchemaSchemaFromDdl({required String ddl});

  Future<String> gluesqlCoreDataSchemaSchemaToDdl({required Schema that});

  Future<Value> gluesqlCoreDataValueValueAdd(
      {required Value that, required Value other});

  Future<Value> gluesqlCoreDataValueValueBitwiseAnd(
      {required Value that, required Value other});

  Future<Value> gluesqlCoreDataValueValueBitwiseShiftLeft(
      {required Value that, required Value rhs});

  Future<Value> gluesqlCoreDataValueValueBitwiseShiftRight(
      {required Value that, required Value rhs});

  Future<Value> gluesqlCoreDataValueValueCast(
      {required Value that, required DataType dataType});

  Future<Value> gluesqlCoreDataValueValueConcat(
      {required Value that, required Value other});

  Future<Value> gluesqlCoreDataValueValueDivide(
      {required Value that, required Value other});

  Future<Ordering?> gluesqlCoreDataValueValueEvaluateCmp(
      {required Value that, required Value other});

  Future<Ordering?> gluesqlCoreDataValueValueEvaluateCmpWithLiteral(
      {required Value that, required Literal other});

  Future<bool> gluesqlCoreDataValueValueEvaluateEq(
      {required Value that, required Value other});

  Future<bool> gluesqlCoreDataValueValueEvaluateEqWithLiteral(
      {required Value that, required Literal other});

  Future<Value> gluesqlCoreDataValueValueExtract(
      {required Value that, required DateTimeField dateType});

  Future<Value> gluesqlCoreDataValueValueFindIdx(
      {required Value that, required Value subVal, required Value start});

  Future<DataType?> gluesqlCoreDataValueValueGetType({required Value that});

  Future<bool> gluesqlCoreDataValueValueIsNull({required Value that});

  Future<bool> gluesqlCoreDataValueValueIsZero({required Value that});

  Future<Value> gluesqlCoreDataValueValueLike(
      {required Value that, required Value other, required bool caseSensitive});

  Future<Value> gluesqlCoreDataValueValueModulo(
      {required Value that, required Value other});

  Future<Value> gluesqlCoreDataValueValueMultiply(
      {required Value that, required Value other});

  Future<Value> gluesqlCoreDataValueValueParseJsonList({required String value});

  Future<Value> gluesqlCoreDataValueValueParseJsonMap({required String value});

  Future<Value> gluesqlCoreDataValueValuePosition(
      {required Value that, required Value other});

  Future<Value> gluesqlCoreDataValueValueSelector(
      {required Value that, required String selector});

  Future<Value> gluesqlCoreDataValueValueSelectorByIndex(
      {required Value that, required List<Value> selector});

  Future<Value> gluesqlCoreDataValueValueSqrt({required Value that});

  Future<Value> gluesqlCoreDataValueValueSubtract(
      {required Value that, required Value other});

  Future<Uint8List> gluesqlCoreDataValueValueToCmpBeBytes(
      {required Value that});

  Future<Value> gluesqlCoreDataValueValueTryCastFromLiteral(
      {required DataType dataType, required Literal literal});

  Future<Value> gluesqlCoreDataValueValueTryFromLiteral(
      {required DataType dataType, required Literal literal});

  Future<Value> gluesqlCoreDataValueValueUnaryBitwiseNot({required Value that});

  Future<Value> gluesqlCoreDataValueValueUnaryFactorial({required Value that});

  Future<Value> gluesqlCoreDataValueValueUnaryMinus({required Value that});

  Future<Value> gluesqlCoreDataValueValueUnaryPlus({required Value that});

  Future<void> gluesqlCoreDataValueValueValidateNull(
      {required Value that, required bool nullable});

  Future<void> gluesqlCoreDataValueValueValidateType(
      {required Value that, required DataType dataType});

  Future<Statement> gluesqlCoreTranslateTranslate(
      {required SqlStatement sqlStatement});

  Future<Assignment> gluesqlCoreTranslateTranslateAssignment(
      {required SqlAssignment sqlAssignment});

  Future<ForeignKey> gluesqlCoreTranslateTranslateForeignKey(
      {required SqlTableConstraint tableConstraint});

  Future<List<String>> gluesqlCoreTranslateTranslateIdents(
      {required List<SqlIdent> idents});

  Future<ReferentialAction> gluesqlCoreTranslateTranslateReferentialAction(
      {SqlReferentialAction? action});

  BTreeMapKeyDataRow gluesqlMemoryStorageItemAutoAccessorGetRows(
      {required Item that});

  Schema gluesqlMemoryStorageItemAutoAccessorGetSchema({required Item that});

  void gluesqlMemoryStorageItemAutoAccessorSetRows(
      {required Item that, required BTreeMapKeyDataRow rows});

  void gluesqlMemoryStorageItemAutoAccessorSetSchema(
      {required Item that, required Schema schema});

  Future<List<(Key, DataRow)>> gluesqlMemoryStorageMemoryStorageScanData(
      {required MemoryStorage that, required String tableName});

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_Assignment;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_Assignment;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_AssignmentPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_BTreeMapKeyDataRow;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_BTreeMapKeyDataRow;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BTreeMapKeyDataRowPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_ColumnDef;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_ColumnDef;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ColumnDefPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_DataRow;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_DataRow;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_DataRowPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_DataType;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_DataType;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_DataTypePtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_DateTimeField;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_DateTimeField;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_DateTimeFieldPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Expr;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Expr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ExprPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_ExprNode;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_ExprNode;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ExprNodePtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Item;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Item;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ItemPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Key;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Key;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_KeyPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Literal;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Literal;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_LiteralPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_Ordering;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_Ordering;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_OrderingPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Payload;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Payload;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_PayloadPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SchemaIndex;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SchemaIndex;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SchemaIndexPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlAssignment;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlAssignment;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_SqlAssignmentPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlIdent;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlIdent;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SqlIdentPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlReferentialAction;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlReferentialAction;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_SqlReferentialActionPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlStatement;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlStatement;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SqlStatementPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlTableConstraint;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlTableConstraint;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_SqlTableConstraintPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_Statement;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_Statement;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_StatementPtr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_StructCustomFunction;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_StructCustomFunction;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructCustomFunctionPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Value;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Value;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ValuePtr;
}

class RustLibApiImpl extends RustLibApiImplPlatform implements RustLibApi {
  RustLibApiImpl({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @override
  Future<List<Payload>> crateApiSimpleExecute({required String sql}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_String(sql, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 1, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kCrateApiSimpleExecuteConstMeta,
      argValues: [sql],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiSimpleExecuteConstMeta => const TaskConstMeta(
        debugName: "execute",
        argNames: ["sql"],
      );

  @override
  Future<void> crateApiSimpleInitApp() {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 2, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kCrateApiSimpleInitAppConstMeta,
      argValues: [],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kCrateApiSimpleInitAppConstMeta => const TaskConstMeta(
        debugName: "init_app",
        argNames: [],
      );

  @override
  String gluesqlCoreAstAssignmentAutoAccessorGetId({required Assignment that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 3)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_String,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreAstAssignmentAutoAccessorGetIdConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreAstAssignmentAutoAccessorGetIdConstMeta =>
      const TaskConstMeta(
        debugName: "Assignment_auto_accessor_get_id",
        argNames: ["that"],
      );

  @override
  Expr gluesqlCoreAstAssignmentAutoAccessorGetValue(
      {required Assignment that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 4)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreAstAssignmentAutoAccessorGetValueConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreAstAssignmentAutoAccessorGetValueConstMeta =>
      const TaskConstMeta(
        debugName: "Assignment_auto_accessor_get_value",
        argNames: ["that"],
      );

  @override
  void gluesqlCoreAstAssignmentAutoAccessorSetId(
      {required Assignment that, required String id}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
            that, serializer);
        sse_encode_String(id, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 5)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreAstAssignmentAutoAccessorSetIdConstMeta,
      argValues: [that, id],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreAstAssignmentAutoAccessorSetIdConstMeta =>
      const TaskConstMeta(
        debugName: "Assignment_auto_accessor_set_id",
        argNames: ["that", "id"],
      );

  @override
  void gluesqlCoreAstAssignmentAutoAccessorSetValue(
      {required Assignment that, required Expr value}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
            that, serializer);
        sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr(
            value, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 6)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreAstAssignmentAutoAccessorSetValueConstMeta,
      argValues: [that, value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreAstAssignmentAutoAccessorSetValueConstMeta =>
      const TaskConstMeta(
        debugName: "Assignment_auto_accessor_set_value",
        argNames: ["that", "value"],
      );

  @override
  Future<String> gluesqlCoreAstAssignmentToSql({required Assignment that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 7, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_String,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreAstAssignmentToSqlConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreAstAssignmentToSqlConstMeta =>
      const TaskConstMeta(
        debugName: "Assignment_to_sql",
        argNames: ["that"],
      );

  @override
  Future<String> gluesqlCoreAstStatementToSql({required Statement that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 8, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_String,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreAstStatementToSqlConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreAstStatementToSqlConstMeta =>
      const TaskConstMeta(
        debugName: "Statement_to_sql",
        argNames: ["that"],
      );

  @override
  Future<String> gluesqlCoreAstForeignKeyToSql({required ForeignKey that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_box_autoadd_foreign_key(that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 11, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_String,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreAstForeignKeyToSqlConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreAstForeignKeyToSqlConstMeta =>
      const TaskConstMeta(
        debugName: "foreign_key_to_sql",
        argNames: ["that"],
      );

  @override
  Future<ExprNode> gluesqlCoreAstBuilderExprFunctionRand({ExprNode? expr}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
            expr, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 12, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreAstBuilderExprFunctionRandConstMeta,
      argValues: [expr],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreAstBuilderExprFunctionRandConstMeta =>
      const TaskConstMeta(
        debugName: "rand",
        argNames: ["expr"],
      );

  @override
  DateTime gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetCreated(
      {required SchemaIndex that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 13)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_Chrono_Naive,
        decodeErrorData: null,
      ),
      constMeta:
          kGluesqlCoreDataSchemaSchemaIndexAutoAccessorGetCreatedConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kGluesqlCoreDataSchemaSchemaIndexAutoAccessorGetCreatedConstMeta =>
          const TaskConstMeta(
            debugName: "SchemaIndex_auto_accessor_get_created",
            argNames: ["that"],
          );

  @override
  Expr gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetExpr(
      {required SchemaIndex that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 14)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataSchemaSchemaIndexAutoAccessorGetExprConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kGluesqlCoreDataSchemaSchemaIndexAutoAccessorGetExprConstMeta =>
          const TaskConstMeta(
            debugName: "SchemaIndex_auto_accessor_get_expr",
            argNames: ["that"],
          );

  @override
  String gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetName(
      {required SchemaIndex that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 15)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_String,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataSchemaSchemaIndexAutoAccessorGetNameConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kGluesqlCoreDataSchemaSchemaIndexAutoAccessorGetNameConstMeta =>
          const TaskConstMeta(
            debugName: "SchemaIndex_auto_accessor_get_name",
            argNames: ["that"],
          );

  @override
  SchemaIndexOrd gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetOrder(
      {required SchemaIndex that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 16)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_schema_index_ord,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataSchemaSchemaIndexAutoAccessorGetOrderConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kGluesqlCoreDataSchemaSchemaIndexAutoAccessorGetOrderConstMeta =>
          const TaskConstMeta(
            debugName: "SchemaIndex_auto_accessor_get_order",
            argNames: ["that"],
          );

  @override
  void gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetCreated(
      {required SchemaIndex that, required DateTime created}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
            that, serializer);
        sse_encode_Chrono_Naive(created, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 17)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta:
          kGluesqlCoreDataSchemaSchemaIndexAutoAccessorSetCreatedConstMeta,
      argValues: [that, created],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kGluesqlCoreDataSchemaSchemaIndexAutoAccessorSetCreatedConstMeta =>
          const TaskConstMeta(
            debugName: "SchemaIndex_auto_accessor_set_created",
            argNames: ["that", "created"],
          );

  @override
  void gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetExpr(
      {required SchemaIndex that, required Expr expr}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
            that, serializer);
        sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr(
            expr, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 18)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataSchemaSchemaIndexAutoAccessorSetExprConstMeta,
      argValues: [that, expr],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kGluesqlCoreDataSchemaSchemaIndexAutoAccessorSetExprConstMeta =>
          const TaskConstMeta(
            debugName: "SchemaIndex_auto_accessor_set_expr",
            argNames: ["that", "expr"],
          );

  @override
  void gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetName(
      {required SchemaIndex that, required String name}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
            that, serializer);
        sse_encode_String(name, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 19)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataSchemaSchemaIndexAutoAccessorSetNameConstMeta,
      argValues: [that, name],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kGluesqlCoreDataSchemaSchemaIndexAutoAccessorSetNameConstMeta =>
          const TaskConstMeta(
            debugName: "SchemaIndex_auto_accessor_set_name",
            argNames: ["that", "name"],
          );

  @override
  void gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetOrder(
      {required SchemaIndex that, required SchemaIndexOrd order}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
            that, serializer);
        sse_encode_schema_index_ord(order, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 20)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataSchemaSchemaIndexAutoAccessorSetOrderConstMeta,
      argValues: [that, order],
      apiImpl: this,
    ));
  }

  TaskConstMeta
      get kGluesqlCoreDataSchemaSchemaIndexAutoAccessorSetOrderConstMeta =>
          const TaskConstMeta(
            debugName: "SchemaIndex_auto_accessor_set_order",
            argNames: ["that", "order"],
          );

  @override
  Future<Schema> gluesqlCoreDataSchemaSchemaFromDdl({required String ddl}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_String(ddl, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 21, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_schema,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataSchemaSchemaFromDdlConstMeta,
      argValues: [ddl],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataSchemaSchemaFromDdlConstMeta =>
      const TaskConstMeta(
        debugName: "schema_from_ddl",
        argNames: ["ddl"],
      );

  @override
  Future<String> gluesqlCoreDataSchemaSchemaToDdl({required Schema that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_box_autoadd_schema(that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 22, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_String,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataSchemaSchemaToDdlConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataSchemaSchemaToDdlConstMeta =>
      const TaskConstMeta(
        debugName: "schema_to_ddl",
        argNames: ["that"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueAdd(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 23, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueAddConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueAddConstMeta =>
      const TaskConstMeta(
        debugName: "Value_add",
        argNames: ["that", "other"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueBitwiseAnd(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 24, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueBitwiseAndConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueBitwiseAndConstMeta =>
      const TaskConstMeta(
        debugName: "Value_bitwise_and",
        argNames: ["that", "other"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueBitwiseShiftLeft(
      {required Value that, required Value rhs}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            rhs, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 25, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueBitwiseShiftLeftConstMeta,
      argValues: [that, rhs],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueBitwiseShiftLeftConstMeta =>
      const TaskConstMeta(
        debugName: "Value_bitwise_shift_left",
        argNames: ["that", "rhs"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueBitwiseShiftRight(
      {required Value that, required Value rhs}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            rhs, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 26, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueBitwiseShiftRightConstMeta,
      argValues: [that, rhs],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueBitwiseShiftRightConstMeta =>
      const TaskConstMeta(
        debugName: "Value_bitwise_shift_right",
        argNames: ["that", "rhs"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueCast(
      {required Value that, required DataType dataType}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
            dataType, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 27, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueCastConstMeta,
      argValues: [that, dataType],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueCastConstMeta =>
      const TaskConstMeta(
        debugName: "Value_cast",
        argNames: ["that", "dataType"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueConcat(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 28, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataValueValueConcatConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueConcatConstMeta =>
      const TaskConstMeta(
        debugName: "Value_concat",
        argNames: ["that", "other"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueDivide(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 29, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueDivideConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueDivideConstMeta =>
      const TaskConstMeta(
        debugName: "Value_divide",
        argNames: ["that", "other"],
      );

  @override
  Future<Ordering?> gluesqlCoreDataValueValueEvaluateCmp(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 30, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataValueValueEvaluateCmpConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueEvaluateCmpConstMeta =>
      const TaskConstMeta(
        debugName: "Value_evaluate_cmp",
        argNames: ["that", "other"],
      );

  @override
  Future<Ordering?> gluesqlCoreDataValueValueEvaluateCmpWithLiteral(
      {required Value that, required Literal other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 31, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataValueValueEvaluateCmpWithLiteralConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueEvaluateCmpWithLiteralConstMeta =>
      const TaskConstMeta(
        debugName: "Value_evaluate_cmp_with_literal",
        argNames: ["that", "other"],
      );

  @override
  Future<bool> gluesqlCoreDataValueValueEvaluateEq(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 32, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_bool,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataValueValueEvaluateEqConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueEvaluateEqConstMeta =>
      const TaskConstMeta(
        debugName: "Value_evaluate_eq",
        argNames: ["that", "other"],
      );

  @override
  Future<bool> gluesqlCoreDataValueValueEvaluateEqWithLiteral(
      {required Value that, required Literal other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 33, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_bool,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataValueValueEvaluateEqWithLiteralConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueEvaluateEqWithLiteralConstMeta =>
      const TaskConstMeta(
        debugName: "Value_evaluate_eq_with_literal",
        argNames: ["that", "other"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueExtract(
      {required Value that, required DateTimeField dateType}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDateTimeField(
            dateType, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 34, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueExtractConstMeta,
      argValues: [that, dateType],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueExtractConstMeta =>
      const TaskConstMeta(
        debugName: "Value_extract",
        argNames: ["that", "dateType"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueFindIdx(
      {required Value that, required Value subVal, required Value start}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            subVal, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            start, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 35, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueFindIdxConstMeta,
      argValues: [that, subVal, start],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueFindIdxConstMeta =>
      const TaskConstMeta(
        debugName: "Value_find_idx",
        argNames: ["that", "subVal", "start"],
      );

  @override
  Future<DataType?> gluesqlCoreDataValueValueGetType({required Value that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 36, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataValueValueGetTypeConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueGetTypeConstMeta =>
      const TaskConstMeta(
        debugName: "Value_get_type",
        argNames: ["that"],
      );

  @override
  Future<bool> gluesqlCoreDataValueValueIsNull({required Value that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 37, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_bool,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataValueValueIsNullConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueIsNullConstMeta =>
      const TaskConstMeta(
        debugName: "Value_is_null",
        argNames: ["that"],
      );

  @override
  Future<bool> gluesqlCoreDataValueValueIsZero({required Value that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 38, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_bool,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreDataValueValueIsZeroConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueIsZeroConstMeta =>
      const TaskConstMeta(
        debugName: "Value_is_zero",
        argNames: ["that"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueLike(
      {required Value that,
      required Value other,
      required bool caseSensitive}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        sse_encode_bool(caseSensitive, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 39, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueLikeConstMeta,
      argValues: [that, other, caseSensitive],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueLikeConstMeta =>
      const TaskConstMeta(
        debugName: "Value_like",
        argNames: ["that", "other", "caseSensitive"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueModulo(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 40, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueModuloConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueModuloConstMeta =>
      const TaskConstMeta(
        debugName: "Value_modulo",
        argNames: ["that", "other"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueMultiply(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 41, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueMultiplyConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueMultiplyConstMeta =>
      const TaskConstMeta(
        debugName: "Value_multiply",
        argNames: ["that", "other"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueParseJsonList(
      {required String value}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_String(value, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 42, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueParseJsonListConstMeta,
      argValues: [value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueParseJsonListConstMeta =>
      const TaskConstMeta(
        debugName: "Value_parse_json_list",
        argNames: ["value"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueParseJsonMap({required String value}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_String(value, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 43, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueParseJsonMapConstMeta,
      argValues: [value],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueParseJsonMapConstMeta =>
      const TaskConstMeta(
        debugName: "Value_parse_json_map",
        argNames: ["value"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValuePosition(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 44, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValuePositionConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValuePositionConstMeta =>
      const TaskConstMeta(
        debugName: "Value_position",
        argNames: ["that", "other"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueSelector(
      {required Value that, required String selector}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_String(selector, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 45, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueSelectorConstMeta,
      argValues: [that, selector],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueSelectorConstMeta =>
      const TaskConstMeta(
        debugName: "Value_selector",
        argNames: ["that", "selector"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueSelectorByIndex(
      {required Value that, required List<Value> selector}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            selector, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 46, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueSelectorByIndexConstMeta,
      argValues: [that, selector],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueSelectorByIndexConstMeta =>
      const TaskConstMeta(
        debugName: "Value_selector_by_index",
        argNames: ["that", "selector"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueSqrt({required Value that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 47, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueSqrtConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueSqrtConstMeta =>
      const TaskConstMeta(
        debugName: "Value_sqrt",
        argNames: ["that"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueSubtract(
      {required Value that, required Value other}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            other, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 48, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueSubtractConstMeta,
      argValues: [that, other],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueSubtractConstMeta =>
      const TaskConstMeta(
        debugName: "Value_subtract",
        argNames: ["that", "other"],
      );

  @override
  Future<Uint8List> gluesqlCoreDataValueValueToCmpBeBytes(
      {required Value that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 49, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_list_prim_u_8_strict,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueToCmpBeBytesConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueToCmpBeBytesConstMeta =>
      const TaskConstMeta(
        debugName: "Value_to_cmp_be_bytes",
        argNames: ["that"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueTryCastFromLiteral(
      {required DataType dataType, required Literal literal}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
            dataType, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
            literal, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 50, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueTryCastFromLiteralConstMeta,
      argValues: [dataType, literal],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueTryCastFromLiteralConstMeta =>
      const TaskConstMeta(
        debugName: "Value_try_cast_from_literal",
        argNames: ["dataType", "literal"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueTryFromLiteral(
      {required DataType dataType, required Literal literal}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
            dataType, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
            literal, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 51, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueTryFromLiteralConstMeta,
      argValues: [dataType, literal],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueTryFromLiteralConstMeta =>
      const TaskConstMeta(
        debugName: "Value_try_from_literal",
        argNames: ["dataType", "literal"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueUnaryBitwiseNot(
      {required Value that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 52, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueUnaryBitwiseNotConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueUnaryBitwiseNotConstMeta =>
      const TaskConstMeta(
        debugName: "Value_unary_bitwise_not",
        argNames: ["that"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueUnaryFactorial({required Value that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 53, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueUnaryFactorialConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueUnaryFactorialConstMeta =>
      const TaskConstMeta(
        debugName: "Value_unary_factorial",
        argNames: ["that"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueUnaryMinus({required Value that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 54, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueUnaryMinusConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueUnaryMinusConstMeta =>
      const TaskConstMeta(
        debugName: "Value_unary_minus",
        argNames: ["that"],
      );

  @override
  Future<Value> gluesqlCoreDataValueValueUnaryPlus({required Value that}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 55, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueUnaryPlusConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueUnaryPlusConstMeta =>
      const TaskConstMeta(
        debugName: "Value_unary_plus",
        argNames: ["that"],
      );

  @override
  Future<void> gluesqlCoreDataValueValueValidateNull(
      {required Value that, required bool nullable}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_bool(nullable, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 56, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueValidateNullConstMeta,
      argValues: [that, nullable],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueValidateNullConstMeta =>
      const TaskConstMeta(
        debugName: "Value_validate_null",
        argNames: ["that", "nullable"],
      );

  @override
  Future<void> gluesqlCoreDataValueValueValidateType(
      {required Value that, required DataType dataType}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            that, serializer);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
            dataType, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 57, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreDataValueValueValidateTypeConstMeta,
      argValues: [that, dataType],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreDataValueValueValidateTypeConstMeta =>
      const TaskConstMeta(
        debugName: "Value_validate_type",
        argNames: ["that", "dataType"],
      );

  @override
  Future<Statement> gluesqlCoreTranslateTranslate(
      {required SqlStatement sqlStatement}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlStatement(
            sqlStatement, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 58, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreTranslateTranslateConstMeta,
      argValues: [sqlStatement],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreTranslateTranslateConstMeta =>
      const TaskConstMeta(
        debugName: "translate",
        argNames: ["sqlStatement"],
      );

  @override
  Future<Assignment> gluesqlCoreTranslateTranslateAssignment(
      {required SqlAssignment sqlAssignment}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlAssignment(
            sqlAssignment, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 59, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreTranslateTranslateAssignmentConstMeta,
      argValues: [sqlAssignment],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreTranslateTranslateAssignmentConstMeta =>
      const TaskConstMeta(
        debugName: "translate_assignment",
        argNames: ["sqlAssignment"],
      );

  @override
  Future<ForeignKey> gluesqlCoreTranslateTranslateForeignKey(
      {required SqlTableConstraint tableConstraint}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlTableConstraint(
            tableConstraint, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 60, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_foreign_key,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreTranslateTranslateForeignKeyConstMeta,
      argValues: [tableConstraint],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreTranslateTranslateForeignKeyConstMeta =>
      const TaskConstMeta(
        debugName: "translate_foreign_key",
        argNames: ["tableConstraint"],
      );

  @override
  Future<List<String>> gluesqlCoreTranslateTranslateIdents(
      {required List<SqlIdent> idents}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
            idents, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 61, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_list_String,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlCoreTranslateTranslateIdentsConstMeta,
      argValues: [idents],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreTranslateTranslateIdentsConstMeta =>
      const TaskConstMeta(
        debugName: "translate_idents",
        argNames: ["idents"],
      );

  @override
  Future<ReferentialAction> gluesqlCoreTranslateTranslateReferentialAction(
      {SqlReferentialAction? action}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
            action, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 62, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_referential_action,
        decodeErrorData: sse_decode_AnyhowException,
      ),
      constMeta: kGluesqlCoreTranslateTranslateReferentialActionConstMeta,
      argValues: [action],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlCoreTranslateTranslateReferentialActionConstMeta =>
      const TaskConstMeta(
        debugName: "translate_referential_action",
        argNames: ["action"],
      );

  @override
  BTreeMapKeyDataRow gluesqlMemoryStorageItemAutoAccessorGetRows(
      {required Item that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 63)!;
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlMemoryStorageItemAutoAccessorGetRowsConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlMemoryStorageItemAutoAccessorGetRowsConstMeta =>
      const TaskConstMeta(
        debugName: "Item_auto_accessor_get_rows",
        argNames: ["that"],
      );

  @override
  Schema gluesqlMemoryStorageItemAutoAccessorGetSchema({required Item that}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
            that, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 64)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_schema,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlMemoryStorageItemAutoAccessorGetSchemaConstMeta,
      argValues: [that],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlMemoryStorageItemAutoAccessorGetSchemaConstMeta =>
      const TaskConstMeta(
        debugName: "Item_auto_accessor_get_schema",
        argNames: ["that"],
      );

  @override
  void gluesqlMemoryStorageItemAutoAccessorSetRows(
      {required Item that, required BTreeMapKeyDataRow rows}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
            that, serializer);
        sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow(
            rows, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 65)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlMemoryStorageItemAutoAccessorSetRowsConstMeta,
      argValues: [that, rows],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlMemoryStorageItemAutoAccessorSetRowsConstMeta =>
      const TaskConstMeta(
        debugName: "Item_auto_accessor_set_rows",
        argNames: ["that", "rows"],
      );

  @override
  void gluesqlMemoryStorageItemAutoAccessorSetSchema(
      {required Item that, required Schema schema}) {
    return handler.executeSync(SyncTask(
      callFfi: () {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
            that, serializer);
        sse_encode_schema(schema, serializer);
        return pdeCallFfi(generalizedFrbRustBinding, serializer, funcId: 66)!;
      },
      codec: SseCodec(
        decodeSuccessData: sse_decode_unit,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlMemoryStorageItemAutoAccessorSetSchemaConstMeta,
      argValues: [that, schema],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlMemoryStorageItemAutoAccessorSetSchemaConstMeta =>
      const TaskConstMeta(
        debugName: "Item_auto_accessor_set_schema",
        argNames: ["that", "schema"],
      );

  @override
  Future<List<(Key, DataRow)>> gluesqlMemoryStorageMemoryStorageScanData(
      {required MemoryStorage that, required String tableName}) {
    return handler.executeNormal(NormalTask(
      callFfi: (port_) {
        final serializer = SseSerializer(generalizedFrbRustBinding);
        sse_encode_box_autoadd_memory_storage(that, serializer);
        sse_encode_String(tableName, serializer);
        pdeCallFfi(generalizedFrbRustBinding, serializer,
            funcId: 67, port: port_);
      },
      codec: SseCodec(
        decodeSuccessData:
            sse_decode_list_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row,
        decodeErrorData: null,
      ),
      constMeta: kGluesqlMemoryStorageMemoryStorageScanDataConstMeta,
      argValues: [that, tableName],
      apiImpl: this,
    ));
  }

  TaskConstMeta get kGluesqlMemoryStorageMemoryStorageScanDataConstMeta =>
      const TaskConstMeta(
        debugName: "memory_storage_scan_data",
        argNames: ["that", "tableName"],
      );

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_Assignment => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_Assignment => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_BTreeMapKeyDataRow => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_BTreeMapKeyDataRow => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_ColumnDef => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_ColumnDef => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_DataRow => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_DataRow => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_DataType => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_DataType => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_DateTimeField => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDateTimeField;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_DateTimeField => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDateTimeField;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Expr =>
      wire.rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Expr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_ExprNode => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_ExprNode => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Item =>
      wire.rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Item =>
      wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Key => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Key => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_Literal => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_Literal => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_Ordering => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_Ordering => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_Payload => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_Payload => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SchemaIndex => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SchemaIndex => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlAssignment => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlAssignment;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlAssignment => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlAssignment;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlIdent => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlIdent => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlReferentialAction => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlReferentialAction => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlStatement => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlStatement;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlStatement => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlStatement;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_SqlTableConstraint => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlTableConstraint;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_SqlTableConstraint => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlTableConstraint;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_Statement => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_Statement => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement;

  RustArcIncrementStrongCountFnType
      get rust_arc_increment_strong_count_StructCustomFunction => wire
          .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction;

  RustArcDecrementStrongCountFnType
      get rust_arc_decrement_strong_count_StructCustomFunction => wire
          .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Value =>
      wire.rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Value =>
      wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AnyhowException(raw as String);
  }

  @protected
  Assignment
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AssignmentImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BTreeMapKeyDataRow
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BTreeMapKeyDataRowImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ColumnDef
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ColumnDefImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DataRow
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return DataRowImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DataType
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return DataTypeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Expr
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ExprImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ExprNode
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ExprNodeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Item
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ItemImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Key dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return KeyImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Ordering
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return OrderingImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Payload
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PayloadImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SchemaIndex
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SchemaIndexImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlIdent
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlIdentImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlReferentialAction
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlReferentialActionImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Statement
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return StatementImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  StructCustomFunction
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return StructCustomFunctionImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Value
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ValueImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Assignment
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AssignmentImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Item
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ItemImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SchemaIndex
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SchemaIndexImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Assignment
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AssignmentImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DataType
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return DataTypeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DateTimeField
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDateTimeField(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return DateTimeFieldImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Item
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ItemImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Literal
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return LiteralImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SchemaIndex
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SchemaIndexImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlAssignment
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlAssignment(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlAssignmentImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlStatement
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlStatement(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlStatementImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlTableConstraint
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlTableConstraint(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlTableConstraintImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Statement
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return StatementImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Value
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ValueImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DateTime dco_decode_Chrono_Naive(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeTimestamp(ts: dco_decode_i_64(raw).toInt(), isUtc: true);
  }

  @protected
  Map<String, Item>
      dco_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return Map.fromEntries(
        dco_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
                raw)
            .map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Map<String, StructCustomFunction>
      dco_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return Map.fromEntries(
        dco_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
                raw)
            .map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Map<String, Value>
      dco_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return Map.fromEntries(
        dco_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
                raw)
            .map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Map<String, Map<String, Value>>
      dco_decode_Map_String_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return Map.fromEntries(
        dco_decode_list_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
                raw)
            .map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Assignment
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AssignmentImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BTreeMapKeyDataRow
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BTreeMapKeyDataRowImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ColumnDef
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ColumnDefImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DataRow
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return DataRowImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DataType
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return DataTypeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DateTimeField
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDateTimeField(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return DateTimeFieldImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Expr
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ExprImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ExprNode
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ExprNodeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Item
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ItemImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Key dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return KeyImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Literal
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return LiteralImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Ordering
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return OrderingImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Payload
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PayloadImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SchemaIndex
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SchemaIndexImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlAssignment
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlAssignment(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlAssignmentImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlIdent
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlIdentImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlReferentialAction
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlReferentialActionImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlStatement
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlStatement(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlStatementImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqlTableConstraint
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlTableConstraint(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqlTableConstraintImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Statement
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return StatementImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  StructCustomFunction
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return StructCustomFunctionImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Value
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ValueImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  String dco_decode_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as String;
  }

  @protected
  ToSql dco_decode_TraitDef_ToSql(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  ToSqlUnquoted dco_decode_TraitDef_ToSqlUnquoted(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  bool dco_decode_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as bool;
  }

  @protected
  DataType
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
        raw);
  }

  @protected
  ExprNode
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
        raw);
  }

  @protected
  Ordering
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
        raw);
  }

  @protected
  SqlReferentialAction
      dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
        raw);
  }

  @protected
  ForeignKey dco_decode_box_autoadd_foreign_key(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_foreign_key(raw);
  }

  @protected
  MemoryStorage dco_decode_box_autoadd_memory_storage(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_memory_storage(raw);
  }

  @protected
  Schema dco_decode_box_autoadd_schema(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_schema(raw);
  }

  @protected
  ForeignKey dco_decode_foreign_key(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 6)
      throw Exception('unexpected arr length: expect 6 but see ${arr.length}');
    return ForeignKey(
      name: dco_decode_String(arr[0]),
      referencingColumnName: dco_decode_String(arr[1]),
      referencedTableName: dco_decode_String(arr[2]),
      referencedColumnName: dco_decode_String(arr[3]),
      onDelete: dco_decode_referential_action(arr[4]),
      onUpdate: dco_decode_referential_action(arr[5]),
    );
  }

  @protected
  int dco_decode_i_32(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  PlatformInt64 dco_decode_i_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeI64(raw);
  }

  @protected
  List<ColumnDef>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef)
        .toList();
  }

  @protected
  List<Payload>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload)
        .toList();
  }

  @protected
  List<SchemaIndex>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex)
        .toList();
  }

  @protected
  List<SqlIdent>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent)
        .toList();
  }

  @protected
  List<Value>
      dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue)
        .toList();
  }

  @protected
  List<String> dco_decode_list_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_String).toList();
  }

  @protected
  List<ForeignKey> dco_decode_list_foreign_key(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_foreign_key).toList();
  }

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as Uint8List;
  }

  @protected
  List<(Key, DataRow)>
      dco_decode_list_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row)
        .toList();
  }

  @protected
  List<(String, Item)>
      dco_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item)
        .toList();
  }

  @protected
  List<(String, StructCustomFunction)>
      dco_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function)
        .toList();
  }

  @protected
  List<(String, Value)>
      dco_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value)
        .toList();
  }

  @protected
  List<(String, Map<String, Value>)>
      dco_decode_list_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(
            dco_decode_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value)
        .toList();
  }

  @protected
  MemoryStorage dco_decode_memory_storage(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4)
      throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return MemoryStorage(
      idCounter: dco_decode_i_64(arr[0]),
      items:
          dco_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
              arr[1]),
      metadata:
          dco_decode_Map_String_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
              arr[2]),
      functions:
          dco_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
              arr[3]),
    );
  }

  @protected
  String? dco_decode_opt_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_String(raw);
  }

  @protected
  DataType?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
            raw);
  }

  @protected
  ExprNode?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
            raw);
  }

  @protected
  Ordering?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
            raw);
  }

  @protected
  SqlReferentialAction?
      dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
            raw);
  }

  @protected
  List<ColumnDef>?
      dco_decode_opt_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
            raw);
  }

  @protected
  (
    Key,
    DataRow
  ) dco_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey(
          arr[0]),
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow(
          arr[1]),
    );
  }

  @protected
  (
    String,
    Item
  ) dco_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_String(arr[0]),
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          arr[1]),
    );
  }

  @protected
  (
    String,
    StructCustomFunction
  ) dco_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_String(arr[0]),
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          arr[1]),
    );
  }

  @protected
  (
    String,
    Value
  ) dco_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_String(arr[0]),
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          arr[1]),
    );
  }

  @protected
  (
    String,
    Map<String, Value>
  ) dco_decode_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
      dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (
      dco_decode_String(arr[0]),
      dco_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          arr[1]),
    );
  }

  @protected
  ReferentialAction dco_decode_referential_action(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReferentialAction.values[raw as int];
  }

  @protected
  Schema dco_decode_schema(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 6)
      throw Exception('unexpected arr length: expect 6 but see ${arr.length}');
    return Schema(
      tableName: dco_decode_String(arr[0]),
      columnDefs:
          dco_decode_opt_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
              arr[1]),
      indexes:
          dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
              arr[2]),
      engine: dco_decode_opt_String(arr[3]),
      foreignKeys: dco_decode_list_foreign_key(arr[4]),
      comment: dco_decode_opt_String(arr[5]),
    );
  }

  @protected
  SchemaIndexOrd dco_decode_schema_index_ord(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SchemaIndexOrd.values[raw as int];
  }

  @protected
  int dco_decode_u_8(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  void dco_decode_unit(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return;
  }

  @protected
  BigInt dco_decode_usize(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeU64(raw);
  }

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_String(deserializer);
    return AnyhowException(inner);
  }

  @protected
  Assignment
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AssignmentImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  BTreeMapKeyDataRow
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BTreeMapKeyDataRowImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  ColumnDef
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ColumnDefImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  DataRow
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return DataRowImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  DataType
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return DataTypeImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Expr
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ExprImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  ExprNode
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ExprNodeImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Item
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ItemImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Key sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return KeyImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Ordering
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return OrderingImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Payload
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PayloadImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SchemaIndex
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SchemaIndexImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlIdent
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlIdentImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlReferentialAction
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlReferentialActionImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Statement
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return StatementImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  StructCustomFunction
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return StructCustomFunctionImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Value
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ValueImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Assignment
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AssignmentImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Item
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ItemImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SchemaIndex
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SchemaIndexImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Assignment
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AssignmentImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  DataType
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return DataTypeImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  DateTimeField
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDateTimeField(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return DateTimeFieldImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Item
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ItemImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Literal
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return LiteralImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SchemaIndex
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SchemaIndexImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlAssignment
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlAssignment(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlAssignmentImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlStatement
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlStatement(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlStatementImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlTableConstraint
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlTableConstraint(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlTableConstraintImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Statement
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return StatementImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Value
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ValueImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  DateTime sse_decode_Chrono_Naive(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_i_64(deserializer);
    return DateTime.fromMicrosecondsSinceEpoch(inner.toInt(), isUtc: true);
  }

  @protected
  Map<String, Item>
      sse_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner =
        sse_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
            deserializer);
    return Map.fromEntries(inner.map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Map<String, StructCustomFunction>
      sse_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner =
        sse_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
            deserializer);
    return Map.fromEntries(inner.map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Map<String, Value>
      sse_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner =
        sse_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
            deserializer);
    return Map.fromEntries(inner.map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Map<String, Map<String, Value>>
      sse_decode_Map_String_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner =
        sse_decode_list_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
            deserializer);
    return Map.fromEntries(inner.map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  Assignment
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return AssignmentImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  BTreeMapKeyDataRow
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BTreeMapKeyDataRowImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  ColumnDef
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ColumnDefImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  DataRow
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return DataRowImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  DataType
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return DataTypeImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  DateTimeField
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDateTimeField(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return DateTimeFieldImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Expr
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ExprImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  ExprNode
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ExprNodeImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Item
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ItemImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Key sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return KeyImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Literal
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return LiteralImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Ordering
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return OrderingImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Payload
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PayloadImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SchemaIndex
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SchemaIndexImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlAssignment
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlAssignment(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlAssignmentImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlIdent
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlIdentImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlReferentialAction
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlReferentialActionImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlStatement
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlStatement(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlStatementImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SqlTableConstraint
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlTableConstraint(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqlTableConstraintImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Statement
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return StatementImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  StructCustomFunction
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return StructCustomFunctionImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Value
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ValueImpl.frbInternalSseDecode(
        sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  String sse_decode_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_list_prim_u_8_strict(deserializer);
    return utf8.decoder.convert(inner);
  }

  @protected
  bool sse_decode_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8() != 0;
  }

  @protected
  DataType
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
        deserializer));
  }

  @protected
  ExprNode
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
        deserializer));
  }

  @protected
  Ordering
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
        deserializer));
  }

  @protected
  SqlReferentialAction
      sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
        deserializer));
  }

  @protected
  ForeignKey sse_decode_box_autoadd_foreign_key(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_foreign_key(deserializer));
  }

  @protected
  MemoryStorage sse_decode_box_autoadd_memory_storage(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_memory_storage(deserializer));
  }

  @protected
  Schema sse_decode_box_autoadd_schema(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_schema(deserializer));
  }

  @protected
  ForeignKey sse_decode_foreign_key(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_name = sse_decode_String(deserializer);
    var var_referencingColumnName = sse_decode_String(deserializer);
    var var_referencedTableName = sse_decode_String(deserializer);
    var var_referencedColumnName = sse_decode_String(deserializer);
    var var_onDelete = sse_decode_referential_action(deserializer);
    var var_onUpdate = sse_decode_referential_action(deserializer);
    return ForeignKey(
        name: var_name,
        referencingColumnName: var_referencingColumnName,
        referencedTableName: var_referencedTableName,
        referencedColumnName: var_referencedColumnName,
        onDelete: var_onDelete,
        onUpdate: var_onUpdate);
  }

  @protected
  int sse_decode_i_32(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getInt32();
  }

  @protected
  PlatformInt64 sse_decode_i_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getPlatformInt64();
  }

  @protected
  List<ColumnDef>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <ColumnDef>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<Payload>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <Payload>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<SchemaIndex>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <SchemaIndex>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<SqlIdent>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <SqlIdent>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<Value>
      sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <Value>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <String>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_String(deserializer));
    }
    return ans_;
  }

  @protected
  List<ForeignKey> sse_decode_list_foreign_key(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <ForeignKey>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_foreign_key(deserializer));
    }
    return ans_;
  }

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var len_ = sse_decode_i_32(deserializer);
    return deserializer.buffer.getUint8List(len_);
  }

  @protected
  List<(Key, DataRow)>
      sse_decode_list_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <(Key, DataRow)>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<(String, Item)>
      sse_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <(String, Item)>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<(String, StructCustomFunction)>
      sse_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <(String, StructCustomFunction)>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<(String, Value)>
      sse_decode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <(String, Value)>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
              deserializer));
    }
    return ans_;
  }

  @protected
  List<(String, Map<String, Value>)>
      sse_decode_list_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <(String, Map<String, Value>)>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
          sse_decode_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
              deserializer));
    }
    return ans_;
  }

  @protected
  MemoryStorage sse_decode_memory_storage(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_idCounter = sse_decode_i_64(deserializer);
    var var_items =
        sse_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
            deserializer);
    var var_metadata =
        sse_decode_Map_String_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            deserializer);
    var var_functions =
        sse_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
            deserializer);
    return MemoryStorage(
        idCounter: var_idCounter,
        items: var_items,
        metadata: var_metadata,
        functions: var_functions);
  }

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_String(deserializer));
    } else {
      return null;
    }
  }

  @protected
  DataType?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  ExprNode?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  Ordering?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  SqlReferentialAction?
      sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  List<ColumnDef>?
      sse_decode_opt_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          deserializer));
    } else {
      return null;
    }
  }

  @protected
  (
    Key,
    DataRow
  ) sse_decode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 =
        sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey(
            deserializer);
    var var_field1 =
        sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (
    String,
    Item
  ) sse_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_String(deserializer);
    var var_field1 =
        sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (
    String,
    StructCustomFunction
  ) sse_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_String(deserializer);
    var var_field1 =
        sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (
    String,
    Value
  ) sse_decode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_String(deserializer);
    var var_field1 =
        sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  (
    String,
    Map<String, Value>
  ) sse_decode_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_String(deserializer);
    var var_field1 =
        sse_decode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
            deserializer);
    return (var_field0, var_field1);
  }

  @protected
  ReferentialAction sse_decode_referential_action(
      SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_i_32(deserializer);
    return ReferentialAction.values[inner];
  }

  @protected
  Schema sse_decode_schema(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_tableName = sse_decode_String(deserializer);
    var var_columnDefs =
        sse_decode_opt_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
            deserializer);
    var var_indexes =
        sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
            deserializer);
    var var_engine = sse_decode_opt_String(deserializer);
    var var_foreignKeys = sse_decode_list_foreign_key(deserializer);
    var var_comment = sse_decode_opt_String(deserializer);
    return Schema(
        tableName: var_tableName,
        columnDefs: var_columnDefs,
        indexes: var_indexes,
        engine: var_engine,
        foreignKeys: var_foreignKeys,
        comment: var_comment);
  }

  @protected
  SchemaIndexOrd sse_decode_schema_index_ord(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_i_32(deserializer);
    return SchemaIndexOrd.values[inner];
  }

  @protected
  int sse_decode_u_8(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8();
  }

  @protected
  void sse_decode_unit(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getBigUint64();
  }

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.message, serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          Assignment self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AssignmentImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow(
          BTreeMapKeyDataRow self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as BTreeMapKeyDataRowImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          ColumnDef self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ColumnDefImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow(
          DataRow self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as DataRowImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          DataType self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as DataTypeImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr(
          Expr self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ExprImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          ExprNode self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ExprNodeImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          Item self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ItemImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey(
          Key self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as KeyImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          Ordering self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as OrderingImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          Payload self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as PayloadImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          SchemaIndex self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SchemaIndexImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          SqlIdent self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlIdentImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          SqlReferentialAction self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlReferentialActionImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
          Statement self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as StatementImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          StructCustomFunction self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as StructCustomFunctionImpl).frbInternalSseEncode(move: true),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          Value self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ValueImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          Assignment self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AssignmentImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          Item self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ItemImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          SchemaIndex self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SchemaIndexImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          Assignment self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AssignmentImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          DataType self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as DataTypeImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDateTimeField(
          DateTimeField self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as DateTimeFieldImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          Item self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ItemImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
          Literal self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as LiteralImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          SchemaIndex self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SchemaIndexImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlAssignment(
          SqlAssignment self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlAssignmentImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlStatement(
          SqlStatement self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlStatementImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlTableConstraint(
          SqlTableConstraint self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlTableConstraintImpl).frbInternalSseEncode(move: false),
        serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
          Statement self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as StatementImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          Value self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ValueImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Chrono_Naive(DateTime self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_64(
        PlatformInt64Util.from(self.microsecondsSinceEpoch), serializer);
  }

  @protected
  void
      sse_encode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          Map<String, Item> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
        self.entries.map((e) => (e.key, e.value)).toList(), serializer);
  }

  @protected
  void
      sse_encode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          Map<String, StructCustomFunction> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
        self.entries.map((e) => (e.key, e.value)).toList(), serializer);
  }

  @protected
  void
      sse_encode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          Map<String, Value> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
        self.entries.map((e) => (e.key, e.value)).toList(), serializer);
  }

  @protected
  void
      sse_encode_Map_String_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          Map<String, Map<String, Value>> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
        self.entries.map((e) => (e.key, e.value)).toList(), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerAssignment(
          Assignment self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as AssignmentImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBTreeMapKeyDataRow(
          BTreeMapKeyDataRow self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as BTreeMapKeyDataRowImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          ColumnDef self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ColumnDefImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow(
          DataRow self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as DataRowImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          DataType self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as DataTypeImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDateTimeField(
          DateTimeField self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as DateTimeFieldImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExpr(
          Expr self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ExprImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          ExprNode self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ExprNodeImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
          Item self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ItemImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey(
          Key self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as KeyImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLiteralstatic(
          Literal self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as LiteralImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          Ordering self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as OrderingImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          Payload self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as PayloadImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          SchemaIndex self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SchemaIndexImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlAssignment(
          SqlAssignment self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlAssignmentImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          SqlIdent self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlIdentImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          SqlReferentialAction self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlReferentialActionImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlStatement(
          SqlStatement self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlStatementImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlTableConstraint(
          SqlTableConstraint self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as SqlTableConstraintImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStatement(
          Statement self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as StatementImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
          StructCustomFunction self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as StructCustomFunctionImpl).frbInternalSseEncode(move: null),
        serializer);
  }

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          Value self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
        (self as ValueImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_String(String self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_prim_u_8_strict(utf8.encoder.convert(self), serializer);
  }

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self ? 1 : 0);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          DataType self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          ExprNode self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          Ordering self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
        self, serializer);
  }

  @protected
  void
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          SqlReferentialAction self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
        self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_foreign_key(
      ForeignKey self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_foreign_key(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_memory_storage(
      MemoryStorage self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_memory_storage(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_schema(Schema self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_schema(self, serializer);
  }

  @protected
  void sse_encode_foreign_key(ForeignKey self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.name, serializer);
    sse_encode_String(self.referencingColumnName, serializer);
    sse_encode_String(self.referencedTableName, serializer);
    sse_encode_String(self.referencedColumnName, serializer);
    sse_encode_referential_action(self.onDelete, serializer);
    sse_encode_referential_action(self.onUpdate, serializer);
  }

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putInt32(self);
  }

  @protected
  void sse_encode_i_64(PlatformInt64 self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putPlatformInt64(self);
  }

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          List<ColumnDef> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          item, serializer);
    }
  }

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          List<Payload> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPayload(
          item, serializer);
    }
  }

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          List<SchemaIndex> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
          item, serializer);
    }
  }

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          List<SqlIdent> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlIdent(
          item, serializer);
    }
  }

  @protected
  void
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          List<Value> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
          item, serializer);
    }
  }

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_String(item, serializer);
    }
  }

  @protected
  void sse_encode_list_foreign_key(
      List<ForeignKey> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_foreign_key(item, serializer);
    }
  }

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    serializer.buffer.putUint8List(self);
  }

  @protected
  void
      sse_encode_list_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row(
          List<(Key, DataRow)> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row(
          item, serializer);
    }
  }

  @protected
  void
      sse_encode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
          List<(String, Item)> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
          item, serializer);
    }
  }

  @protected
  void
      sse_encode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
          List<(String, StructCustomFunction)> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
          item, serializer);
    }
  }

  @protected
  void
      sse_encode_list_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          List<(String, Value)> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          item, serializer);
    }
  }

  @protected
  void
      sse_encode_list_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          List<(String, Map<String, Value>)> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          item, serializer);
    }
  }

  @protected
  void sse_encode_memory_storage(MemoryStorage self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_64(self.idCounter, serializer);
    sse_encode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
        self.items, serializer);
    sse_encode_Map_String_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
        self.metadata, serializer);
    sse_encode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
        self.functions, serializer);
  }

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_String(self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          DataType? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataType(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          ExprNode? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerExprNode(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          Ordering? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerOrdering(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          SqlReferentialAction? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqlReferentialAction(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_opt_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          List<ColumnDef>? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
          self, serializer);
    }
  }

  @protected
  void
      sse_encode_record_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_key_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_data_row(
          (Key, DataRow) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerKey(
        self.$1, serializer);
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDataRow(
        self.$2, serializer);
  }

  @protected
  void
      sse_encode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_item(
          (String, Item) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.$1, serializer);
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerItem(
        self.$2, serializer);
  }

  @protected
  void
      sse_encode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_struct_custom_function(
          (String, StructCustomFunction) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.$1, serializer);
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStructCustomFunction(
        self.$2, serializer);
  }

  @protected
  void
      sse_encode_record_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          (String, Value) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.$1, serializer);
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
        self.$2, serializer);
  }

  @protected
  void
      sse_encode_record_string_map_string_auto_owned_rust_opaque_flutter_rust_bridgefor_generated_rust_auto_opaque_inner_value(
          (String, Map<String, Value>) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.$1, serializer);
    sse_encode_Map_String_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerValue(
        self.$2, serializer);
  }

  @protected
  void sse_encode_referential_action(
      ReferentialAction self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.index, serializer);
  }

  @protected
  void sse_encode_schema(Schema self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.tableName, serializer);
    sse_encode_opt_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerColumnDef(
        self.columnDefs, serializer);
    sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSchemaIndex(
        self.indexes, serializer);
    sse_encode_opt_String(self.engine, serializer);
    sse_encode_list_foreign_key(self.foreignKeys, serializer);
    sse_encode_opt_String(self.comment, serializer);
  }

  @protected
  void sse_encode_schema_index_ord(
      SchemaIndexOrd self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.index, serializer);
  }

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self);
  }

  @protected
  void sse_encode_unit(void self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putBigUint64(self);
  }
}

@sealed
class AssignmentImpl extends RustOpaque implements Assignment {
  // Not to be used by end users
  AssignmentImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  AssignmentImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Assignment,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Assignment,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_AssignmentPtr,
  );

  String get id =>
      RustLib.instance.api.gluesqlCoreAstAssignmentAutoAccessorGetId(
        that: this,
      );

  Expr get value =>
      RustLib.instance.api.gluesqlCoreAstAssignmentAutoAccessorGetValue(
        that: this,
      );

  void set id(String id) => RustLib.instance.api
      .gluesqlCoreAstAssignmentAutoAccessorSetId(that: this, id: id);

  void set value(Expr value) => RustLib.instance.api
      .gluesqlCoreAstAssignmentAutoAccessorSetValue(that: this, value: value);

  Future<String> toSql() => RustLib.instance.api.gluesqlCoreAstAssignmentToSql(
        that: this,
      );
}

@sealed
class BTreeMapKeyDataRowImpl extends RustOpaque implements BTreeMapKeyDataRow {
  // Not to be used by end users
  BTreeMapKeyDataRowImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  BTreeMapKeyDataRowImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_BTreeMapKeyDataRow,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_BTreeMapKeyDataRow,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_BTreeMapKeyDataRowPtr,
  );
}

@sealed
class ColumnDefImpl extends RustOpaque implements ColumnDef {
  // Not to be used by end users
  ColumnDefImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ColumnDefImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_ColumnDef,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_ColumnDef,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_ColumnDefPtr,
  );
}

@sealed
class DataRowImpl extends RustOpaque implements DataRow {
  // Not to be used by end users
  DataRowImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  DataRowImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_DataRow,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_DataRow,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_DataRowPtr,
  );
}

@sealed
class DataTypeImpl extends RustOpaque implements DataType {
  // Not to be used by end users
  DataTypeImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  DataTypeImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_DataType,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_DataType,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_DataTypePtr,
  );
}

@sealed
class DateTimeFieldImpl extends RustOpaque implements DateTimeField {
  // Not to be used by end users
  DateTimeFieldImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  DateTimeFieldImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_DateTimeField,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_DateTimeField,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_DateTimeFieldPtr,
  );
}

@sealed
class ExprImpl extends RustOpaque implements Expr {
  // Not to be used by end users
  ExprImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ExprImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Expr,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Expr,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_ExprPtr,
  );
}

@sealed
class ExprNodeImpl extends RustOpaque implements ExprNode {
  // Not to be used by end users
  ExprNodeImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ExprNodeImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_ExprNode,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_ExprNode,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_ExprNodePtr,
  );
}

@sealed
class ItemImpl extends RustOpaque implements Item {
  // Not to be used by end users
  ItemImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ItemImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Item,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Item,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_ItemPtr,
  );

  BTreeMapKeyDataRow get rows =>
      RustLib.instance.api.gluesqlMemoryStorageItemAutoAccessorGetRows(
        that: this,
      );

  Schema get schema =>
      RustLib.instance.api.gluesqlMemoryStorageItemAutoAccessorGetSchema(
        that: this,
      );

  void set rows(BTreeMapKeyDataRow rows) => RustLib.instance.api
      .gluesqlMemoryStorageItemAutoAccessorSetRows(that: this, rows: rows);

  void set schema(Schema schema) =>
      RustLib.instance.api.gluesqlMemoryStorageItemAutoAccessorSetSchema(
          that: this, schema: schema);
}

@sealed
class KeyImpl extends RustOpaque implements Key {
  // Not to be used by end users
  KeyImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  KeyImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Key,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Key,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_KeyPtr,
  );
}

@sealed
class LiteralImpl extends RustOpaque implements Literal {
  // Not to be used by end users
  LiteralImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  LiteralImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Literal,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Literal,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_LiteralPtr,
  );
}

@sealed
class OrderingImpl extends RustOpaque implements Ordering {
  // Not to be used by end users
  OrderingImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  OrderingImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Ordering,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Ordering,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_OrderingPtr,
  );
}

@sealed
class PayloadImpl extends RustOpaque implements Payload {
  // Not to be used by end users
  PayloadImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PayloadImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Payload,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Payload,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_PayloadPtr,
  );
}

@sealed
class SchemaIndexImpl extends RustOpaque implements SchemaIndex {
  // Not to be used by end users
  SchemaIndexImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SchemaIndexImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_SchemaIndex,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_SchemaIndex,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_SchemaIndexPtr,
  );

  DateTime get created => RustLib.instance.api
          .gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetCreated(
        that: this,
      );

  Expr get expr =>
      RustLib.instance.api.gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetExpr(
        that: this,
      );

  String get name =>
      RustLib.instance.api.gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetName(
        that: this,
      );

  SchemaIndexOrd get order =>
      RustLib.instance.api.gluesqlCoreDataSchemaSchemaIndexAutoAccessorGetOrder(
        that: this,
      );

  void set created(DateTime created) => RustLib.instance.api
      .gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetCreated(
          that: this, created: created);

  void set expr(Expr expr) =>
      RustLib.instance.api.gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetExpr(
          that: this, expr: expr);

  void set name(String name) =>
      RustLib.instance.api.gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetName(
          that: this, name: name);

  void set order(SchemaIndexOrd order) =>
      RustLib.instance.api.gluesqlCoreDataSchemaSchemaIndexAutoAccessorSetOrder(
          that: this, order: order);
}

@sealed
class SqlAssignmentImpl extends RustOpaque implements SqlAssignment {
  // Not to be used by end users
  SqlAssignmentImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SqlAssignmentImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_SqlAssignment,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_SqlAssignment,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_SqlAssignmentPtr,
  );
}

@sealed
class SqlIdentImpl extends RustOpaque implements SqlIdent {
  // Not to be used by end users
  SqlIdentImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SqlIdentImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_SqlIdent,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_SqlIdent,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_SqlIdentPtr,
  );
}

@sealed
class SqlReferentialActionImpl extends RustOpaque
    implements SqlReferentialAction {
  // Not to be used by end users
  SqlReferentialActionImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SqlReferentialActionImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_SqlReferentialAction,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_SqlReferentialAction,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_SqlReferentialActionPtr,
  );
}

@sealed
class SqlStatementImpl extends RustOpaque implements SqlStatement {
  // Not to be used by end users
  SqlStatementImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SqlStatementImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_SqlStatement,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_SqlStatement,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_SqlStatementPtr,
  );
}

@sealed
class SqlTableConstraintImpl extends RustOpaque implements SqlTableConstraint {
  // Not to be used by end users
  SqlTableConstraintImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SqlTableConstraintImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_SqlTableConstraint,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_SqlTableConstraint,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_SqlTableConstraintPtr,
  );
}

@sealed
class StatementImpl extends RustOpaque implements Statement {
  // Not to be used by end users
  StatementImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  StatementImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Statement,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Statement,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_StatementPtr,
  );

  Future<String> toSql() => RustLib.instance.api.gluesqlCoreAstStatementToSql(
        that: this,
      );
}

@sealed
class StructCustomFunctionImpl extends RustOpaque
    implements StructCustomFunction {
  // Not to be used by end users
  StructCustomFunctionImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  StructCustomFunctionImpl.frbInternalSseDecode(
      BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_StructCustomFunction,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_StructCustomFunction,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_StructCustomFunctionPtr,
  );
}

@sealed
class ValueImpl extends RustOpaque implements Value {
  // Not to be used by end users
  ValueImpl.frbInternalDcoDecode(List<dynamic> wire)
      : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ValueImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
      : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_Value,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_Value,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_ValuePtr,
  );

  Future<Value> add({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValueAdd(that: this, other: other);

  Future<Value> bitwiseAnd({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValueBitwiseAnd(that: this, other: other);

  Future<Value> bitwiseShiftLeft({required Value rhs}) => RustLib.instance.api
      .gluesqlCoreDataValueValueBitwiseShiftLeft(that: this, rhs: rhs);

  Future<Value> bitwiseShiftRight({required Value rhs}) => RustLib.instance.api
      .gluesqlCoreDataValueValueBitwiseShiftRight(that: this, rhs: rhs);

  Future<Value> cast({required DataType dataType}) => RustLib.instance.api
      .gluesqlCoreDataValueValueCast(that: this, dataType: dataType);

  Future<Value> concat({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValueConcat(that: this, other: other);

  Future<Value> divide({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValueDivide(that: this, other: other);

  Future<Ordering?> evaluateCmp({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValueEvaluateCmp(that: this, other: other);

  Future<Ordering?> evaluateCmpWithLiteral({required Literal other}) =>
      RustLib.instance.api.gluesqlCoreDataValueValueEvaluateCmpWithLiteral(
          that: this, other: other);

  Future<bool> evaluateEq({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValueEvaluateEq(that: this, other: other);

  Future<bool> evaluateEqWithLiteral({required Literal other}) => RustLib
      .instance.api
      .gluesqlCoreDataValueValueEvaluateEqWithLiteral(that: this, other: other);

  Future<Value> extract({required DateTimeField dateType}) =>
      RustLib.instance.api
          .gluesqlCoreDataValueValueExtract(that: this, dateType: dateType);

  Future<Value> findIdx({required Value subVal, required Value start}) =>
      RustLib.instance.api.gluesqlCoreDataValueValueFindIdx(
          that: this, subVal: subVal, start: start);

  Future<DataType?> getType() =>
      RustLib.instance.api.gluesqlCoreDataValueValueGetType(
        that: this,
      );

  Future<bool> isNull() => RustLib.instance.api.gluesqlCoreDataValueValueIsNull(
        that: this,
      );

  Future<bool> isZero() => RustLib.instance.api.gluesqlCoreDataValueValueIsZero(
        that: this,
      );

  Future<Value> like({required Value other, required bool caseSensitive}) =>
      RustLib.instance.api.gluesqlCoreDataValueValueLike(
          that: this, other: other, caseSensitive: caseSensitive);

  Future<Value> modulo({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValueModulo(that: this, other: other);

  Future<Value> multiply({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValueMultiply(that: this, other: other);

  /// # Description
  /// The operation method differs depending on the argument.
  /// 1. If both arguments are String
  ///     - Support only [`Value::Str`] variant
  ///     - Returns the position where the first letter of the substring starts if the string contains a substring.
  ///     - Returns [`Value::I64`] 0 if the string to be found is not found.
  ///     - Returns minimum value [`Value::I64`] 1 when the string is found.
  ///     - Returns [`Value::Null`] if NULL parameter found.
  ///
  /// 2. Other arguments
  ///     - Not Supported Yet.
  ///
  /// # Examples
  /// ```
  /// use gluesql_core::prelude::Value;
  ///
  /// let str1 = Value::Str("ramen".to_owned());
  /// let str2 = Value::Str("men".to_owned());
  ///
  /// assert_eq!(str1.position(&str2), Ok(Value::I64(3)));
  /// assert_eq!(str2.position(&str1), Ok(Value::I64(0)));
  /// assert!(Value::Null.position(&str2).unwrap().is_null());
  /// assert!(str1.position(&Value::Null).unwrap().is_null());
  /// ```
  Future<Value> position({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValuePosition(that: this, other: other);

  Future<Value> selector({required String selector}) => RustLib.instance.api
      .gluesqlCoreDataValueValueSelector(that: this, selector: selector);

  Future<Value> selectorByIndex({required List<Value> selector}) => RustLib
      .instance.api
      .gluesqlCoreDataValueValueSelectorByIndex(that: this, selector: selector);

  Future<Value> sqrt() => RustLib.instance.api.gluesqlCoreDataValueValueSqrt(
        that: this,
      );

  Future<Value> subtract({required Value other}) => RustLib.instance.api
      .gluesqlCoreDataValueValueSubtract(that: this, other: other);

  /// Value to Big-Endian for comparison purpose
  Future<Uint8List> toCmpBeBytes() =>
      RustLib.instance.api.gluesqlCoreDataValueValueToCmpBeBytes(
        that: this,
      );

  Future<Value> unaryBitwiseNot() =>
      RustLib.instance.api.gluesqlCoreDataValueValueUnaryBitwiseNot(
        that: this,
      );

  Future<Value> unaryFactorial() =>
      RustLib.instance.api.gluesqlCoreDataValueValueUnaryFactorial(
        that: this,
      );

  Future<Value> unaryMinus() =>
      RustLib.instance.api.gluesqlCoreDataValueValueUnaryMinus(
        that: this,
      );

  Future<Value> unaryPlus() =>
      RustLib.instance.api.gluesqlCoreDataValueValueUnaryPlus(
        that: this,
      );

  Future<void> validateNull({required bool nullable}) => RustLib.instance.api
      .gluesqlCoreDataValueValueValidateNull(that: this, nullable: nullable);

  Future<void> validateType({required DataType dataType}) => RustLib
      .instance.api
      .gluesqlCoreDataValueValueValidateType(that: this, dataType: dataType);
}
